{
	"name": "LoadStagingDBtoRelationDB_fund_df",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SQLstagingfund_ds",
						"type": "DatasetReference"
					},
					"name": "StagingDB"
				},
				{
					"dataset": {
						"referenceName": "SQLrelationfund_ds",
						"type": "DatasetReference"
					},
					"name": "RelationDB"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SQLrelationfund_ds",
						"type": "DatasetReference"
					},
					"name": "InsertUpdateRow"
				}
			],
			"transformations": [
				{
					"name": "StatgingAddChecksum"
				},
				{
					"name": "LookupRelationalStream"
				},
				{
					"name": "RelationalAddChecksum"
				},
				{
					"name": "ConditionalSplitNewOrExpire"
				},
				{
					"name": "RelationRenameColumns"
				},
				{
					"name": "SelectNewStagingRow"
				},
				{
					"name": "AddAuditColumns"
				},
				{
					"name": "AlterRowInsertUpdateExpire"
				},
				{
					"name": "UpdateAddAuditAttributes"
				},
				{
					"name": "AddExpiredAttributes"
				},
				{
					"name": "UpdateSelectForInsert"
				},
				{
					"name": "UnionForDB"
				},
				{
					"name": "UpdateSelectForExpire"
				}
			],
			"script": "parameters{\n\tProcessName as string,\n\tFileName as string,\n\tEtl_Utc_Tag as string\n}\nsource(output(\n\t\tFund_ID as string,\n\t\tCompany_Name as string,\n\t\tFund_Name as string,\n\t\tFund_Master as string,\n\t\tFund_master_Name as string,\n\t\tFund_Parent_Allocation_percentage as decimal(18,2),\n\t\tFund_ABN as string,\n\t\tFund_ARSN as string,\n\t\tFund_Country as string,\n\t\tFund_Region as string,\n\t\tFund_State as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> StagingDB\nsource(output(\n\t\tFund_ID as string,\n\t\tCompany_Name as string,\n\t\tFund_Name as string,\n\t\tFund_Master as string,\n\t\tFund_master_Name as string,\n\t\tFund_Parent_Allocation_percentage as decimal(18,2),\n\t\tFund_ABN as string,\n\t\tFund_ARSN as string,\n\t\tFund_Country as string,\n\t\tFund_Region as string,\n\t\tFund_State as string,\n\t\tstart_datetime as timestamp,\n\t\tprocess_name as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: ' SELECT [Fund_ID]\\n      ,[Company_Name]\\n      ,[Fund_Name]\\n      ,[Fund_Master]\\n      ,[Fund_master_Name]\\n      ,[Fund_Parent_Allocation_percentage]\\n      ,[Fund_ABN]\\n      ,[Fund_ARSN]\\n      ,[Fund_Country]\\n      ,[Fund_Region]\\n      ,[Fund_State]\\n      ,[start_datetime]\\n      ,[process_name]\\n  FROM [relational].[Fund]\\n  WHERE [record_deleted_flag] = 0',\n\tformat: 'query') ~> RelationDB\nStagingDB derive(StagingChecksum = sha2(256, Fund_ID,Company_Name,Fund_Name,Fund_Master,Fund_master_Name,Fund_Parent_Allocation_percentage,Fund_ABN,Fund_ARSN,Fund_Country,Fund_Region,Fund_State)) ~> StatgingAddChecksum\nStatgingAddChecksum, RelationRenameColumns lookup(Fund_ID == Relation_Fund_ID,\n\tmultiple: true,\n\tbroadcast: 'auto')~> LookupRelationalStream\nRelationDB derive(RelationalChecksum = sha2(256, Fund_ID,Company_Name,Fund_Name,Fund_Master,Fund_master_Name,Fund_Parent_Allocation_percentage,Fund_ABN,Fund_ARSN,Fund_Country,Fund_Region,Fund_State)) ~> RelationalAddChecksum\nLookupRelationalStream split(isNull(Relation_RelationalChecksum),\n\tStagingChecksum != Relation_RelationalChecksum || Fund_Parent_Allocation_percentage != Relation_Fund_Parent_Allocation_percentage,\n\tdisjoint: false) ~> ConditionalSplitNewOrExpire@(StagingNewRow, StagingChangedRow, IgnoreNoChange)\nRelationalAddChecksum select(mapColumn(\n\t\tRelation_Fund_ID = Fund_ID,\n\t\tRelation_Company_Name = Company_Name,\n\t\tRelation_Fund_Name = Fund_Name,\n\t\tRelation_Fund_Master = Fund_Master,\n\t\tRelation_Fund_master_Name = Fund_master_Name,\n\t\tRelation_Fund_Parent_Allocation_percentage = Fund_Parent_Allocation_percentage,\n\t\tRelation_Fund_ABN = Fund_ABN,\n\t\tRelation_Fund_ARSN = Fund_ARSN,\n\t\tRelation_Fund_Country = Fund_Country,\n\t\tRelation_Fund_Region = Fund_Region,\n\t\tRelation_Fund_State = Fund_State,\n\t\tRelation_start_datetime = start_datetime,\n\t\tRelation_process_name = process_name,\n\t\tRelation_RelationalChecksum = RelationalChecksum\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> RelationRenameColumns\nConditionalSplitNewOrExpire@StagingNewRow select(mapColumn(\n\t\tFund_ID,\n\t\tCompany_Name,\n\t\tFund_Name,\n\t\tFund_Master,\n\t\tFund_master_Name,\n\t\tFund_Parent_Allocation_percentage,\n\t\tFund_ABN,\n\t\tFund_ARSN,\n\t\tFund_Country,\n\t\tFund_Region,\n\t\tFund_State\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectNewStagingRow\nSelectNewStagingRow derive(start_datetime = fromUTC(currentUTC(), 'Australia/Sydney'),\n\t\tend_datetime = toTimestamp('9999-12-31 00:00:00'),\n\t\trecord_deleted_flag = toInteger(0),\n\t\tprocess_name = concatWS('_',$ProcessName,$FileName)) ~> AddAuditColumns\nUnionForDB alterRow(insertIf(record_deleted_flag==toInteger(0)),\n\tupdateIf(record_deleted_flag==toInteger(1))) ~> AlterRowInsertUpdateExpire\nConditionalSplitNewOrExpire@StagingChangedRow derive(start_datetime = fromUTC(currentUTC(), 'Australia/Sydney'),\n\t\tend_datetime = toTimestamp('9999-12-31 00:00:00'),\n\t\trecord_deleted_flag = toInteger(0),\n\t\tprocess_name = concatWS('_', $ProcessName, $FileName)) ~> UpdateAddAuditAttributes\nConditionalSplitNewOrExpire@StagingChangedRow derive(end_datetime = fromUTC(currentUTC(), 'Australia/Sydney'),\n\t\trecord_deleted_flag = toInteger(1)) ~> AddExpiredAttributes\nUpdateAddAuditAttributes select(mapColumn(\n\t\tFund_ID,\n\t\tCompany_Name,\n\t\tFund_Name,\n\t\tFund_Master,\n\t\tFund_master_Name,\n\t\tFund_Parent_Allocation_percentage,\n\t\tFund_ABN,\n\t\tFund_ARSN,\n\t\tFund_Country,\n\t\tFund_Region,\n\t\tFund_State,\n\t\tstart_datetime,\n\t\tend_datetime,\n\t\trecord_deleted_flag,\n\t\tprocess_name\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> UpdateSelectForInsert\nAddAuditColumns, UpdateSelectForInsert, UpdateSelectForExpire union(byName: true)~> UnionForDB\nAddExpiredAttributes select(mapColumn(\n\t\tFund_ID = Relation_Fund_ID,\n\t\tCompany_Name = Relation_Company_Name,\n\t\tFund_Name = Relation_Fund_Name,\n\t\tFund_Master = Relation_Fund_Master,\n\t\tFund_master_Name = Relation_Fund_master_Name,\n\t\tFund_Parent_Allocation_percentage = Relation_Fund_Parent_Allocation_percentage,\n\t\tFund_ABN = Relation_Fund_ABN,\n\t\tFund_ARSN = Relation_Fund_ARSN,\n\t\tFund_Country = Relation_Fund_Country,\n\t\tFund_Region = Relation_Fund_Region,\n\t\tFund_State = Relation_Fund_State,\n\t\tstart_datetime = Relation_start_datetime,\n\t\tprocess_name = Relation_process_name,\n\t\tend_datetime,\n\t\trecord_deleted_flag\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> UpdateSelectForExpire\nAlterRowInsertUpdateExpire sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tFund_ID as string,\n\t\tCompany_Name as string,\n\t\tFund_Name as string,\n\t\tFund_Master as string,\n\t\tFund_master_Name as string,\n\t\tFund_Parent_Allocation_percentage as decimal(18,2),\n\t\tFund_ABN as string,\n\t\tFund_ARSN as string,\n\t\tFund_Country as string,\n\t\tFund_Region as string,\n\t\tFund_State as string,\n\t\tstart_datetime as timestamp,\n\t\tend_datetime as timestamp,\n\t\trecord_deleted_flag as integer,\n\t\tprocess_name as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['Fund_ID','process_name'],\n\tformat: 'table',\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tFund_ID,\n\t\tCompany_Name,\n\t\tFund_Name,\n\t\tFund_Master,\n\t\tFund_master_Name,\n\t\tFund_Parent_Allocation_percentage,\n\t\tFund_ABN,\n\t\tFund_ARSN,\n\t\tFund_Country,\n\t\tFund_Region,\n\t\tFund_State,\n\t\tstart_datetime,\n\t\tend_datetime,\n\t\trecord_deleted_flag,\n\t\tprocess_name\n\t)) ~> InsertUpdateRow"
		}
	}
}