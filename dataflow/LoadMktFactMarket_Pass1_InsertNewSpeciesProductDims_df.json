{
	"name": "LoadMktFactMarket_Pass1_InsertNewSpeciesProductDims_df",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CSVgenericWithParameter_ds",
						"type": "DatasetReference"
					},
					"name": "ReadSource"
				},
				{
					"dataset": {
						"referenceName": "SQLtableGeneric_ds",
						"type": "DatasetReference"
					},
					"name": "DatamartDimProductLkp"
				},
				{
					"dataset": {
						"referenceName": "SQLtableGeneric_ds",
						"type": "DatasetReference"
					},
					"name": "DatamartDimSpeciesLkp"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SQLtableGenericWithParam_ds",
						"type": "DatasetReference"
					},
					"name": "InsertNewSpeciesDim"
				},
				{
					"dataset": {
						"referenceName": "SQLtableGenericWithParam_ds",
						"type": "DatasetReference"
					},
					"name": "InsertNewProductDim"
				}
			],
			"transformations": [
				{
					"name": "SelectDimProductLkp"
				},
				{
					"name": "DataTransformation"
				},
				{
					"name": "SelectDimSpeciesLkp"
				},
				{
					"name": "LookupDimSpecies"
				},
				{
					"name": "LookupDimProduct"
				},
				{
					"name": "FilterProcessGroup"
				},
				{
					"name": "GetUniqueSpicesProductCombination"
				},
				{
					"name": "SplitSpeciesProductDetails"
				},
				{
					"name": "SelectSpeciesOutput"
				},
				{
					"name": "SelectProductOutput"
				},
				{
					"name": "AddPoductDetails"
				},
				{
					"name": "RemoveBlankSpeciesProduct"
				},
				{
					"name": "DerivedSpeciesDetails"
				}
			],
			"script": "parameters{\n\tGeneratedBatchDate as string,\n\tWorkbookName as string,\n\tWorksheetName as string,\n\tMasterPipelineName as string,\n\tProduct_Group as string\n}\nsource(output(\n\t\t{Source Metric} as string,\n\t\t{Period Date} as string,\n\t\tCountry as string,\n\t\tRegion as string,\n\t\t{Species Common Name} as string,\n\t\t{Product Common Name} as string,\n\t\tCurrency as string,\n\t\tUOM as string,\n\t\tMarket as string,\n\t\t{Delivery Point} as string,\n\t\tIndicator as string,\n\t\tType as string,\n\t\tBasis as string,\n\t\t{Origin Port Country} as string,\n\t\t{Origin Port Region} as string,\n\t\t{Origin Port} as string,\n\t\t{Destination Port Country} as string,\n\t\t{Destination Port Region} as string,\n\t\t{Destination Port} as string,\n\t\t{Vessel Name} as string,\n\t\tLow as string,\n\t\tHigh as string,\n\t\tAverage as string,\n\t\tSpot as string,\n\t\tComment as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ReadSource\nsource(output(\n\t\tProduct_Id as integer,\n\t\tProduct_Code as string,\n\t\tProduct_Type as string,\n\t\tProduct_Global_Grade as string,\n\t\tProduct_Common_Name as string,\n\t\tProduct_Desc as string,\n\t\tProduct_Group as string,\n\t\tGL_Code as string,\n\t\tSpecies_Common_Name as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT DISTINCT [Product_Id]\\n      ,[Product_Code]\\n      ,[Product_Type]\\n      ,[Product_Global_Grade]\\n      ,[Product_Common_Name]\\n      ,[Product_Desc]\\n      ,[Product_Group]\\n      ,[GL_Code]\\n      ,[Species_Common_Name]\\nFROM [datamart].[Dim_Product]\\nWHERE [Product_Id] != -1',\n\tformat: 'query') ~> DatamartDimProductLkp\nsource(output(\n\t\tSpecies_ID as integer,\n\t\tSpecies_Code as string,\n\t\tGenus as string,\n\t\tSpecies as string,\n\t\tSpecies_Common_Name as string,\n\t\tSpecies_Group as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT DISTINCT [Species_ID]\\n      ,[Species_Code]\\n      ,[Genus]\\n      ,[Species]\\n      ,[Species_Common_Name]\\n      ,[Species_Group]\\n  FROM [datamart].[Dim_Species]\\nWHERE [Species_ID] != -1',\n\tformat: 'query') ~> DatamartDimSpeciesLkp\nFilterProcessGroup select(mapColumn(\n\t\tProduct_Id_Lkp = Product_Id,\n\t\tProduct_Code_Lkp = Product_Code,\n\t\tProduct_Type_Lkp = Product_Type,\n\t\tProduct_Global_Grade_Lkp = Product_Global_Grade,\n\t\tProduct_Common_Name_Lkp = Product_Common_Name,\n\t\tProduct_Desc_Lkp = Product_Desc,\n\t\tProduct_Group_Lkp = Product_Group,\n\t\tGL_Code_Lkp = GL_Code,\n\t\tProduct_Species_Common_Name_Lkp = Species_Common_Name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDimProductLkp\nGetUniqueSpicesProductCombination derive(Source_File = concat($WorkbookName,'-', $WorksheetName),\n\t\tBatch_ID = replace(replace(replace($GeneratedBatchDate, \"-\", \"\"),\":\",\"\"),\" \",\"\"),\n\t\tProcess_Name = $MasterPipelineName,\n\t\tInsert_DateTime = fromUTC(currentUTC(), 'Australia/Sydney')) ~> DataTransformation\nDatamartDimSpeciesLkp select(mapColumn(\n\t\tSpecies_ID_Lkp = Species_ID,\n\t\tSpecies_Code_Lkp = Species_Code,\n\t\tGenus_Lkp = Genus,\n\t\tSpecies_Lkp = Species,\n\t\tSpecies_Common_Name_Lkp = Species_Common_Name,\n\t\tSpecies_Group_Lkp = Species_Group\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDimSpeciesLkp\nDataTransformation, SelectDimSpeciesLkp lookup({Species Common Name} == Species_Common_Name_Lkp,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupDimSpecies\nLookupDimSpecies, SelectDimProductLkp lookup({Product Common Name} == Product_Common_Name_Lkp\n\t&& {Species Common Name} == Product_Species_Common_Name_Lkp,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupDimProduct\nDatamartDimProductLkp filter(Product_Group == $Product_Group) ~> FilterProcessGroup\nRemoveBlankSpeciesProduct aggregate(groupBy({Species Common Name},\n\t\t{Product Common Name}),\n\tUniqueCount = count()) ~> GetUniqueSpicesProductCombination\nLookupDimProduct split(isNull(Species_ID_Lkp),\n\tisNull(Product_Id_Lkp) || (not(isNull(Species_ID_Lkp)) && not(isNull(Product_Id_Lkp)) && notEquals(Species_Common_Name_Lkp, Product_Species_Common_Name_Lkp)),\n\tdisjoint: true) ~> SplitSpeciesProductDetails@(Species, Product)\nDerivedSpeciesDetails select(mapColumn(\n\t\tSpecies_Code,\n\t\tGenus,\n\t\tSpecies,\n\t\tSpecies_Common_Name = {Species Common Name},\n\t\tSpecies_Group,\n\t\tSource_File,\n\t\tBatch_ID,\n\t\tProcess_Name,\n\t\tInsert_DateTime\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSpeciesOutput\nAddPoductDetails select(mapColumn(\n\t\tProduct_Code,\n\t\tProduct_Type,\n\t\tProduct_Global_Grade,\n\t\tProduct_Common_Name = {Product Common Name},\n\t\tProduct_Desc,\n\t\tProduct_Group,\n\t\tGL_Code,\n\t\tSpecies_Common_Name = {Species Common Name},\n\t\tSource_File,\n\t\tBatch_ID,\n\t\tProcess_Name,\n\t\tInsert_DateTime\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectProductOutput\nSplitSpeciesProductDetails@Product derive(Product_Group = $Product_Group,\n\t\tProduct_Code = 'Undefined',\n\t\tProduct_Type = 'Undefined',\n\t\tProduct_Global_Grade = 'Undefined',\n\t\tProduct_Desc = 'Undefined',\n\t\tGL_Code = 'Undefined') ~> AddPoductDetails\nReadSource filter(not(isNull({Species Common Name})) && not(isNull({Product Common Name}))) ~> RemoveBlankSpeciesProduct\nSplitSpeciesProductDetails@Species derive(Species_Code = 'Undefined',\n\t\tGenus = 'Undefined',\n\t\tSpecies = 'Undefined',\n\t\tSpecies_Group = 'Undefined') ~> DerivedSpeciesDetails\nSelectSpeciesOutput sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tSpecies_Code,\n\t\tGenus,\n\t\tSpecies,\n\t\tSpecies_Common_Name,\n\t\tSpecies_Group,\n\t\tSource_File,\n\t\tBatch_ID,\n\t\tProcess_Name,\n\t\tInsert_DateTime\n\t)) ~> InsertNewSpeciesDim\nSelectProductOutput sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tProduct_Code,\n\t\tProduct_Type,\n\t\tProduct_Global_Grade,\n\t\tProduct_Common_Name,\n\t\tProduct_Desc,\n\t\tProduct_Group,\n\t\tGL_Code,\n\t\tSpecies_Common_Name,\n\t\tSource_File,\n\t\tBatch_ID,\n\t\tProcess_Name,\n\t\tInsert_DateTime\n\t)) ~> InsertNewProductDim"
		}
	}
}