{
	"name": "LoadStagingDBtoRelationDB_opscontract_df",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SQLstagingopscontract_ds",
						"type": "DatasetReference"
					},
					"name": "StagingDB"
				},
				{
					"dataset": {
						"referenceName": "SQLrelationopscontract_ds",
						"type": "DatasetReference"
					},
					"name": "RelationalContract"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SQLrelationopscontract_ds",
						"type": "DatasetReference"
					},
					"name": "UpserttRow"
				}
			],
			"transformations": [
				{
					"name": "SelectStagingData"
				},
				{
					"name": "AddAuditColumns"
				},
				{
					"name": "GenerateRelationalChecksum"
				},
				{
					"name": "SelectRelationalData"
				},
				{
					"name": "GenerateStagingChecksum"
				},
				{
					"name": "CompareKeys"
				},
				{
					"name": "UnionNewAndExisting"
				},
				{
					"name": "SelectNewRecordData"
				},
				{
					"name": "AlterRowUpsert"
				},
				{
					"name": "ConvertDatesAndNumber"
				},
				{
					"name": "NewAndExistingContract"
				},
				{
					"name": "ChangedAddAuditData"
				},
				{
					"name": "SelectChangeRecord"
				}
			],
			"script": "parameters{\n\tProcessName as string,\n\tFileName as string,\n\tEtl_Utc_Tag as string\n}\nsource(output(\n\t\tAsset_ID as string,\n\t\tFund_ID as string,\n\t\tContract_ID as string,\n\t\tReporting_Period as string,\n\t\tExecution_Date as string,\n\t\tTermination_Date as string,\n\t\tCompany_Name as string,\n\t\tContract_Value as string,\n\t\tContract_Currency as string,\n\t\tContract_Type_Code as string,\n\t\tExecuted_By_Entity1 as string,\n\t\tExecuted_By_Entity2 as string,\n\t\tExecuted_By_Entity3 as string,\n\t\tValidation_Error as string,\n\t\tContract_Type as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> StagingDB\nsource(output(\n\t\tAsset_ID as string,\n\t\tFund_ID as string,\n\t\tContract_ID as integer,\n\t\tReporting_Period as date,\n\t\tExecution_Date as date,\n\t\tTermination_Date as date,\n\t\tCompany_Name as string,\n\t\tContract_Value as decimal(19,4),\n\t\tContract_Currency as string,\n\t\tContract_Type as string,\n\t\tExecuted_By_Entity1 as string,\n\t\tExecuted_By_Entity2 as string,\n\t\tExecuted_By_Entity3 as string,\n\t\tInsert_Datetime as timestamp,\n\t\tUpdate_Datetime as timestamp,\n\t\tProcess_Name as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> RelationalContract\nGenerateStagingChecksum select(mapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tContract_ID,\n\t\tReporting_Period,\n\t\tExecution_Date,\n\t\tTermination_Date,\n\t\tCompany_Name,\n\t\tContract_Value,\n\t\tContract_Currency,\n\t\tContract_Type,\n\t\tExecuted_By_Entity1,\n\t\tExecuted_By_Entity2,\n\t\tExecuted_By_Entity3,\n\t\tStagingChecksum\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectStagingData\nSelectNewRecordData derive(insert_datetime = fromUTC(currentUTC(), 'Australia/Sydney'),\n\t\tprocess_name = concatWS('_',$ProcessName,$FileName)) ~> AddAuditColumns\nRelationalContract derive(RelationalChecksum = sha2(256, Reporting_Period,Execution_Date,Termination_Date,Company_Name,Contract_Value,Contract_Currency,Contract_Type,Executed_By_Entity1,Executed_By_Entity2,Executed_By_Entity3)) ~> GenerateRelationalChecksum\nGenerateRelationalChecksum select(mapColumn(\n\t\tRelation_Asset_ID = Asset_ID,\n\t\tRelation_Fund_ID = Fund_ID,\n\t\tRelation_Contract_ID = Contract_ID,\n\t\tRelation_Reporting_Period = Reporting_Period,\n\t\tRelation_Execution_Date = Execution_Date,\n\t\tRelation_Termination_Date = Termination_Date,\n\t\tRelation_Company_Name = Company_Name,\n\t\tRelation_Contract_Value = Contract_Value,\n\t\tRelation_Contract_Currency = Contract_Currency,\n\t\tRelation_Contract_Type = Contract_Type,\n\t\tRelation_Executed_By_Entity1 = Executed_By_Entity1,\n\t\tRelation_Executed_By_Entity2 = Executed_By_Entity2,\n\t\tRelation_Executed_By_Entity3 = Executed_By_Entity3,\n\t\tRelation_Insert_Datetime = Insert_Datetime,\n\t\tRelation_Update_Datetime = Update_Datetime,\n\t\tRelation_Process_Name = Process_Name,\n\t\tRelation_RelationalChecksum = RelationalChecksum\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRelationalData\nConvertDatesAndNumber derive(StagingChecksum = sha2(256, Reporting_Period,Execution_Date,Termination_Date,Company_Name,Contract_Value,Contract_Currency,Contract_Type,Executed_By_Entity1,Executed_By_Entity2,Executed_By_Entity3)) ~> GenerateStagingChecksum\nSelectStagingData, SelectRelationalData lookup(Asset_ID == Relation_Asset_ID\n\t&& Fund_ID == Relation_Fund_ID\n\t&& Contract_ID == Relation_Contract_ID,\n\tmultiple: true,\n\tbroadcast: 'auto')~> CompareKeys\nAddAuditColumns, SelectChangeRecord union(byName: true)~> UnionNewAndExisting\nNewAndExistingContract@NewContract select(mapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tContract_ID,\n\t\tReporting_Period,\n\t\tExecution_Date,\n\t\tTermination_Date,\n\t\tCompany_Name,\n\t\tContract_Value,\n\t\tContract_Currency,\n\t\tContract_Type,\n\t\tExecuted_By_Entity1,\n\t\tExecuted_By_Entity2,\n\t\tExecuted_By_Entity3\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectNewRecordData\nUnionNewAndExisting alterRow(upsertIf(true())) ~> AlterRowUpsert\nStagingDB derive(Reporting_Period = toDate(Reporting_Period, \"dd/MM/yyyy\"),\n\t\tContract_ID = toInteger(Contract_ID),\n\t\tExecution_Date = toDate(Execution_Date, \"dd/MM/yyyy\"),\n\t\tTermination_Date = toDate(Termination_Date, \"dd/MM/yyyy\"),\n\t\tContract_Value = toDecimal(Contract_Value, 19, 4, \"###,###.##\")) ~> ConvertDatesAndNumber\nCompareKeys split(isNull(Relation_RelationalChecksum),\n\tStagingChecksum != Relation_RelationalChecksum || Contract_Value != Relation_Contract_Value,\n\tdisjoint: false) ~> NewAndExistingContract@(NewContract, ChangedContract, ExistingNoChange)\nNewAndExistingContract@ChangedContract derive(update_datetime = fromUTC(currentUTC(), 'Australia/Sydney'),\n\t\tprocess_name = concatWS('_',$ProcessName,$FileName)) ~> ChangedAddAuditData\nChangedAddAuditData select(mapColumn(\n\t\tAsset_ID = Relation_Asset_ID,\n\t\tFund_ID = Relation_Fund_ID,\n\t\tContract_ID = Relation_Contract_ID,\n\t\tReporting_Period,\n\t\tExecution_Date,\n\t\tTermination_Date,\n\t\tCompany_Name,\n\t\tContract_Value,\n\t\tContract_Currency,\n\t\tContract_Type,\n\t\tExecuted_By_Entity1,\n\t\tExecuted_By_Entity2,\n\t\tExecuted_By_Entity3,\n\t\tinsert_datetime = Relation_Insert_Datetime,\n\t\tupdate_datetime,\n\t\tprocess_name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectChangeRecord\nAlterRowUpsert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tAsset_ID as string,\n\t\tFund_ID as string,\n\t\tContract_ID as integer,\n\t\tReporting_Period as date,\n\t\tExecution_Date as date,\n\t\tTermination_Date as date,\n\t\tCompany_Name as string,\n\t\tContract_Value as decimal(19,4),\n\t\tContract_Currency as string,\n\t\tContract_Type as string,\n\t\tExecuted_By_Entity1 as string,\n\t\tExecuted_By_Entity2 as string,\n\t\tExecuted_By_Entity3 as string,\n\t\tInsert_Datetime as timestamp,\n\t\tUpdate_Datetime as timestamp,\n\t\tProcess_Name as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['Asset_ID','Fund_ID','Contract_ID'],\n\tformat: 'table',\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tContract_ID,\n\t\tReporting_Period,\n\t\tExecution_Date,\n\t\tTermination_Date,\n\t\tCompany_Name,\n\t\tContract_Value,\n\t\tContract_Currency,\n\t\tContract_Type,\n\t\tExecuted_By_Entity1,\n\t\tExecuted_By_Entity2,\n\t\tExecuted_By_Entity3,\n\t\tInsert_Datetime = insert_datetime,\n\t\tUpdate_Datetime = update_datetime,\n\t\tProcess_Name = process_name\n\t)) ~> UpserttRow"
		}
	}
}