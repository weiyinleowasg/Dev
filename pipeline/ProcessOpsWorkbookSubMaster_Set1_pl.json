{
	"name": "ProcessOpsWorkbookSubMaster_Set1_pl",
	"properties": {
		"description": "Sub Master job to orchestrate multiple pipelines run. Each pipeline correspond to one tab in the Excel workbook.",
		"activities": [
			{
				"name": "LoadAndUpdateCertificates",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ProcessWorkbookCertifications",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ProcessOpsWorkbookTabCertificates_spl",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"WorkbookName": {
							"value": "@pipeline().parameters.WorkbookName",
							"type": "Expression"
						},
						"CurrentQuarterDate": {
							"value": "@pipeline().parameters.CurrentQuarterDate",
							"type": "Expression"
						},
						"Certifications": {
							"value": "@pipeline().parameters.Certifications",
							"type": "Expression"
						},
						"CurrentRunDateTime": {
							"value": "@pipeline().parameters.CurrentRunDateTime",
							"type": "Expression"
						},
						"MasterUtcTag": {
							"value": "@pipeline().parameters.MasterUtcTag",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "ProcessWorkbookTabTimberSales",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ExtractTimberSales",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ProcessOpsWorkbookTabTimberSales_pl",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"WorkbookName": {
							"value": "@pipeline().parameters.WorkbookName",
							"type": "Expression"
						},
						"CurrentQuarterDate": {
							"value": "@pipeline().parameters.CurrentQuarterDate",
							"type": "Expression"
						},
						"TimberSales": {
							"value": "@pipeline().parameters.TimberSales",
							"type": "Expression"
						},
						"CurrentRunDateTime": {
							"value": "@pipeline().parameters.CurrentRunDateTime",
							"type": "Expression"
						},
						"MasterUtcTag": {
							"value": "@pipeline().parameters.MasterUtcTag",
							"type": "Expression"
						},
						"MasterPipeline": {
							"value": "@pipeline().parameters.MasterPipeline",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "DeleteCertificatesAuditTable",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": {
						"value": "[audit].[DeleteAuditTable]",
						"type": "Expression"
					},
					"storedProcedureParameters": {
						"TableName": {
							"value": {
								"value": "OPS_Certification_Error",
								"type": "Expression"
							},
							"type": "String"
						},
						"WorkBookName": {
							"value": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SQLdbConnection",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "DeleteTimberSalesAuditTable",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": {
						"value": "[audit].[DeleteAuditTable]",
						"type": "Expression"
					},
					"storedProcedureParameters": {
						"TableName": {
							"value": {
								"value": "OPS_Timber_Sales_Error",
								"type": "Expression"
							},
							"type": "String"
						},
						"WorkBookName": {
							"value": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SQLdbConnection",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LoadTimberSales",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ProcessWorkbookTabTimberSales",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ProcessOpsWorkbookTabTimberSales_spl",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"WorkbookName": {
							"value": "@pipeline().parameters.WorkbookName",
							"type": "Expression"
						},
						"CurrentQuarterDate": {
							"value": "@pipeline().parameters.CurrentQuarterDate",
							"type": "Expression"
						},
						"TimberSales": {
							"value": "@pipeline().parameters.TimberSales",
							"type": "Expression"
						},
						"CurrentRunDateTime": {
							"value": "@pipeline().parameters.CurrentRunDateTime",
							"type": "Expression"
						},
						"MasterUtcTag": {
							"value": "@pipeline().parameters.MasterUtcTag",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "ExtractCertifications",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "DeleteCertificatesAuditTable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ExcelSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Asset_ID",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Asset_ID",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Fund_ID",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Fund_ID",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Reporting_Period",
									"physicalType": "String"
								},
								"sink": {
									"name": "Reporting_Period",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Certification_ID",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Certification_ID",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Validation Flag",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Validation_Flag"
								}
							},
							{
								"source": {
									"name": "Certification Type",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Certification_Type"
								}
							},
							{
								"source": {
									"name": "Certification Number",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Certification_Number"
								}
							},
							{
								"source": {
									"name": "Next Audit Date",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Next_Audit_Date"
								}
							},
							{
								"source": {
									"name": "Certifying Body",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Certifying_Body"
								}
							},
							{
								"source": {
									"name": "Certification Date",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Certification_Date"
								}
							},
							{
								"source": {
									"name": "Certification End Date",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Certification_End_Date"
								}
							},
							{
								"source": {
									"name": "Certified Entity",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Certified_Entity"
								}
							},
							{
								"source": {
									"name": "Number of Open Minor CARS",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Number_of_Open_Minor_CARS"
								}
							},
							{
								"source": {
									"name": "Number of Open Major CARS",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Number_of_Open_Major_CARS"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ExcelWorkbook_AllTabs_ds",
						"type": "DatasetReference",
						"parameters": {
							"WorkbookName": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							},
							"TabName": {
								"value": "@pipeline().parameters.Certifications",
								"type": "Expression"
							},
							"Range": {
								"value": "@pipeline().parameters.CertificationsRange",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ParquetPersistentOpsWithTabParam_ds",
						"type": "DatasetReference",
						"parameters": {
							"ParquetFile": {
								"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.Certifications,'_',pipeline().parameters.CurrentQuarterDate,'_Extract')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "ProcessWorkbookCertifications",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ExtractCertifications",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ProcessOpsWorkbookTabCertificates_pl",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"WorkbookName": {
							"value": "@pipeline().parameters.WorkbookName",
							"type": "Expression"
						},
						"CurrentQuarterDate": {
							"value": "@pipeline().parameters.CurrentQuarterDate",
							"type": "Expression"
						},
						"Certifications": {
							"value": "@pipeline().parameters.Certifications",
							"type": "Expression"
						},
						"CurrentRunDateTime": {
							"value": "@pipeline().parameters.CurrentRunDateTime",
							"type": "Expression"
						},
						"MasterUtcTag": {
							"value": "@pipeline().parameters.MasterUtcTag",
							"type": "Expression"
						},
						"MasterPipeline": {
							"value": "@pipeline().parameters.MasterPipeline",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "ExtractTimberSales",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "DeleteTimberSalesAuditTable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ExcelSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Asset_ID",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Asset_ID",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Fund_ID",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Fund_ID",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Reporting_Period",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Reporting_Period",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Validation Flag",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Validation_Flag"
								}
							},
							{
								"source": {
									"name": "Customer",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Customer",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Domestic or Export",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Domestic_or_Export"
								}
							},
							{
								"source": {
									"name": "Species",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Species",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Product Type",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Product_Type"
								}
							},
							{
								"source": {
									"name": "Delivery Point",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Delivery_Point"
								}
							},
							{
								"source": {
									"name": "Price Point",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Price_Point"
								}
							},
							{
								"source": {
									"name": "Sales Unit",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Sales_Unit"
								}
							},
							{
								"source": {
									"name": "Sales Quantity",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Sales_Quantity"
								}
							},
							{
								"source": {
									"name": "Average Sales Price",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Average_Sales_Price"
								}
							},
							{
								"source": {
									"name": "Sales Revenue",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Sales_Revenue"
								}
							},
							{
								"source": {
									"name": "Production Cost",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Production_Cost"
								}
							},
							{
								"source": {
									"name": "Stumpage",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Stumpage",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Unit Stumpage",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Unit_Stumpage"
								}
							},
							{
								"source": {
									"name": "Currency",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Currency",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Month",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Month",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Budget Sales Quantity",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Budget_Sales_Quantity"
								}
							},
							{
								"source": {
									"name": "Budget Sales Revenue",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Budget_Sales_Revenue"
								}
							},
							{
								"source": {
									"name": "Budget Production Cost",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Budget_Production_Cost"
								}
							},
							{
								"source": {
									"name": "Budget Unit Stumpage",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Budget_Unit_Stumpage"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ExcelWorkbook_AllTabs_ds",
						"type": "DatasetReference",
						"parameters": {
							"WorkbookName": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							},
							"TabName": {
								"value": "@pipeline().parameters.TimberSales",
								"type": "Expression"
							},
							"Range": {
								"value": "@pipeline().parameters.TimberSalesRange",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ParquetPersistentOpsWithTabParam_ds",
						"type": "DatasetReference",
						"parameters": {
							"ParquetFile": {
								"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.TimberSales,'_',pipeline().parameters.CurrentQuarterDate,'_Extract')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "DeleteHarvestReconciliation",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": {
						"value": "[audit].[DeleteAuditTable]",
						"type": "Expression"
					},
					"storedProcedureParameters": {
						"TableName": {
							"value": {
								"value": "OPS_Harvest_Reconciliation_Error",
								"type": "Expression"
							},
							"type": "String"
						},
						"WorkBookName": {
							"value": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SQLdbConnection",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "ExtractOperations",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "DeleteOperations",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ExcelSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Asset_ID",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Asset_ID",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Fund_ID",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Fund_ID",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Reporting_Period",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Reporting_Period",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Validation Flag",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Validation_Flag",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Operation Type",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Operation_Type",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Area Treated",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Area_Treated",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Cost of Treatment",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Cost_of_Treatment",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Average Unit Cost",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Average_Unit_Cost",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Budget Area Treated",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Budget_Area_Treated",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Budget Treatment Cost",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Budget_Treatment_Cost",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Budget Unit Cost ",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Budget_Unit_Cost ",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "variation Area Treated",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "variation_Area_Treated",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "variation Treatment Cost",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "variation_Treatment_Cost",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "variation Unit Cost",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "variation_Unit_Cost",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Date Last Age Class Established",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Date_Last_Age_Class_Established",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Species Survived",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Species_Survived",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Survival rate of last age class established",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Survival_rate_of_last_age_class_established",
									"physicalType": "UTF8"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ExcelWorkbook_AllTabs_ds",
						"type": "DatasetReference",
						"parameters": {
							"WorkbookName": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							},
							"TabName": {
								"value": "@pipeline().parameters.Operations",
								"type": "Expression"
							},
							"Range": {
								"value": "@pipeline().parameters.OperationsRange",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ParquetPersistentOpsWithTabParam_ds",
						"type": "DatasetReference",
						"parameters": {
							"ParquetFile": {
								"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.Operations,'_',pipeline().parameters.CurrentQuarterDate,'_Extract')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "DeleteOperations",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": {
						"value": "[audit].[DeleteAuditTable]",
						"type": "Expression"
					},
					"storedProcedureParameters": {
						"TableName": {
							"value": {
								"value": "OPS_Operation_Error",
								"type": "Expression"
							},
							"type": "String"
						},
						"WorkBookName": {
							"value": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SQLdbConnection",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "ProcessWorkbookOperations",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ExtractOperations",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ProcessOpsWorkbookTabOperations_pl",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"WorkbookName": {
							"value": "@pipeline().parameters.WorkbookName",
							"type": "Expression"
						},
						"CurrentQuarterDate": {
							"value": "@pipeline().parameters.CurrentQuarterDate",
							"type": "Expression"
						},
						"Operations": {
							"value": "@pipeline().parameters.Operations",
							"type": "Expression"
						},
						"CurrentRunDateTime": {
							"value": "@pipeline().parameters.CurrentRunDateTime",
							"type": "Expression"
						},
						"MasterUtcTag": {
							"value": "@pipeline().parameters.MasterUtcTag",
							"type": "Expression"
						},
						"MasterPipeline": {
							"value": "@pipeline().parameters.MasterPipeline",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "LoadOperation",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ProcessWorkbookOperations",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ProcessOpsWorkbookTabOperations_spl",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"WorkbookName": {
							"value": "@pipeline().parameters.WorkbookName",
							"type": "Expression"
						},
						"CurrentQuarterDate": {
							"value": "@pipeline().parameters.CurrentQuarterDate",
							"type": "Expression"
						},
						"Operations": {
							"value": "@pipeline().parameters.Operations",
							"type": "Expression"
						},
						"CurrentRunDateTime": {
							"value": "@pipeline().parameters.CurrentRunDateTime",
							"type": "Expression"
						},
						"MasterUtcTag": {
							"value": "@pipeline().parameters.MasterUtcTag",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "ExtractHarvestReconcilliation",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "DeleteHarvestReconciliation",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ExcelSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Asset_ID",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Asset_ID",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Fund_ID",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Fund_ID",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Reporting_Period",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Reporting_Period",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Validation Flag",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Validation_Flag",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Harvest_Unit",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Harvest_Unit",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Harvest Operation Type",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Harvest_Operation_Type",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Product",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Product",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Species",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Species",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Total Net Stocked Area of Harvest Unit",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Total_Net_Stocked_Area_of_Harvest_Unit",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Actual Harvest Commencement",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Actual_Harvest_Commencement",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Predicted Harvested Volume",
									"physicalType": "String"
								},
								"sink": {
									"name": "Predicted_Harvested_GMT",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Predicted Revenue",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Predicted_Revenue",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Predicted Stumpage",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Predicted_Stumpage",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Predicted Sales Expense -  Fees, Levies etc",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Predicted_Sales_Expense_Fees_Levies_etc",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Predicted Sales Expense Cartage",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Predicted_Sales_Expense_Cartage",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Predicted Sales Expense Harvesting",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Predicted_Sales_Expense_Harvesting",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Predicted Sales Expense Roading Capex Maintenance",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Predicted_Sales_Expense_Roading_Capex_Maintenance",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Predicted Sales Expense Other",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Predicted_Sales_Expense_Other",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Actual Date of Reconciliation",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Actual_Date_of_Reconciliation",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Actual Revenue",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Actual_Revenue",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Actual Harvested Volume",
									"physicalType": "String"
								},
								"sink": {
									"name": "Actual_Harvested_GMT",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Actual Harvested Net Stocked Area",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Actual_Harvested_Net_Stocked_Area",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Actual Sales Expense Managers Fees Levies",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Actual_Sales_Expense_Managers_Fees_Levies",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Actual Sales Expense Cartage",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Actual_Sales_Expense_Cartage",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Actual Sales Expense Harvesting",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Actual_Sales_Expense_Harvesting",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Actual Sales Expense Roading Capex Maintenance",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Actual_Sales_Expense_Roading_Capex_Maintenance",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Actual Sales Expense Other",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Actual_Sales_Expense_Other",
									"physicalType": "UTF8"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ExcelWorkbook_AllTabs_ds",
						"type": "DatasetReference",
						"parameters": {
							"WorkbookName": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							},
							"TabName": {
								"value": "@pipeline().parameters.HarvestReconcilliation",
								"type": "Expression"
							},
							"Range": {
								"value": "@pipeline().parameters.HarvestReconcilliationRange",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ParquetPersistentOpsWithTabParam_ds",
						"type": "DatasetReference",
						"parameters": {
							"ParquetFile": {
								"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.HarvestReconcilliation,'_',pipeline().parameters.CurrentQuarterDate,'_Extract')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "ProcessWorkbookHarvestReconcilliation",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ExtractHarvestReconcilliation",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ProcessOpsWorkbookTabHarvestReconcilliation_pl",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"WorkbookName": {
							"value": "@pipeline().parameters.WorkbookName",
							"type": "Expression"
						},
						"CurrentQuarterDate": {
							"value": "@pipeline().parameters.CurrentQuarterDate",
							"type": "Expression"
						},
						"HarvestReconcilliation": {
							"value": "@pipeline().parameters.HarvestReconcilliation",
							"type": "Expression"
						},
						"CurrentRunDateTime": {
							"value": "@pipeline().parameters.CurrentRunDateTime",
							"type": "Expression"
						},
						"MasterUtcTag": {
							"value": "@pipeline().parameters.MasterUtcTag",
							"type": "Expression"
						},
						"MasterPipeline": {
							"value": "@pipeline().parameters.MasterPipeline",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "LoadHarvestReconciliation",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ProcessWorkbookHarvestReconcilliation",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ProcessOpsWorkbookTabHarvestReconcilliation_spl",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"WorkbookName": {
							"value": "@pipeline().parameters.WorkbookName",
							"type": "Expression"
						},
						"CurrentQuarterDate": {
							"value": "@pipeline().parameters.CurrentQuarterDate",
							"type": "Expression"
						},
						"CurrentRunDateTime": {
							"value": "@pipeline().parameters.CurrentRunDateTime",
							"type": "Expression"
						},
						"MasterUtcTag": {
							"value": "@pipeline().parameters.MasterUtcTag",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "DeleteContracts",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": {
						"value": "[audit].[DeleteAuditTable]",
						"type": "Expression"
					},
					"storedProcedureParameters": {
						"TableName": {
							"value": {
								"value": "OPS_Contract_Error",
								"type": "Expression"
							},
							"type": "String"
						},
						"WorkBookName": {
							"value": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SQLdbConnection",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "ExtractContracts",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "DeleteContracts",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ExcelSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Contract_ID",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Contract_ID",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Asset_ID",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Asset_ID",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Fund_ID",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Fund_ID",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Reporting Period",
									"physicalType": "String"
								},
								"sink": {
									"name": "Reporting_Period",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Validation Flag",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Validation_Flag",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Execution Date",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Execution_Date",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Termination Date",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Termination_Date",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Contracted Party Company Name",
									"physicalType": "String"
								},
								"sink": {
									"name": "Contracted_Party_Company_Name",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Estimated Maximum Contract Value over the course of the contract",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Estimated_Maximum_Contract_Value_over_the_course_of_the_contract",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Contract Currency",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Contract_Currency",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Type of goods or services",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Type_of_goods_or_services",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Executed By Entity 1",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Executed_By_Entity_1",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Executed By Entity 2",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Executed_By_Entity_2",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Executed By Entity 3",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Executed_By_Entity_3",
									"physicalType": "UTF8"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ExcelWorkbook_AllTabs_ds",
						"type": "DatasetReference",
						"parameters": {
							"WorkbookName": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							},
							"TabName": {
								"value": "@pipeline().parameters.Contracts",
								"type": "Expression"
							},
							"Range": {
								"value": "@pipeline().parameters.ContractsRange",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ParquetPersistentOpsWithTabParam_ds",
						"type": "DatasetReference",
						"parameters": {
							"ParquetFile": {
								"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.Contracts,'_',pipeline().parameters.CurrentQuarterDate,'_Extract')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "ProcessWorkbookContracts",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ExtractContracts",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ProcessOpsWorkbookTabContracts_pl",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"WorkbookName": {
							"value": "@pipeline().parameters.WorkbookName",
							"type": "Expression"
						},
						"CurrentQuarterDate": {
							"value": "@pipeline().parameters.CurrentQuarterDate",
							"type": "Expression"
						},
						"Contracts": {
							"value": "@pipeline().parameters.Contracts",
							"type": "Expression"
						},
						"CurrentRunDateTime": {
							"value": "@pipeline().parameters.CurrentRunDateTime",
							"type": "Expression"
						},
						"MasterUtcTag": {
							"value": "@pipeline().parameters.MasterUtcTag",
							"type": "Expression"
						},
						"MasterPipeline": {
							"value": "@pipeline().parameters.MasterPipeline",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "LoadAndUpdateContract",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ProcessWorkbookContracts",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ProcessOpsWorkbookTabContracts_spl",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"WorkbookName": {
							"value": "@pipeline().parameters.WorkbookName",
							"type": "Expression"
						},
						"CurrentQuarterDate": {
							"value": "@pipeline().parameters.CurrentQuarterDate",
							"type": "Expression"
						},
						"Contracts": {
							"value": "@pipeline().parameters.Contracts",
							"type": "Expression"
						},
						"CurrentRunDateTime": {
							"value": "@pipeline().parameters.CurrentRunDateTime",
							"type": "Expression"
						},
						"MasterUtcTag": {
							"value": "@pipeline().parameters.MasterUtcTag",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "DeleteStrategicProjects",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": {
						"value": "[audit].[DeleteAuditTable]",
						"type": "Expression"
					},
					"storedProcedureParameters": {
						"TableName": {
							"value": {
								"value": "OPS_Strategic_Project_Error",
								"type": "Expression"
							},
							"type": "String"
						},
						"WorkBookName": {
							"value": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SQLdbConnection",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "ExtractStrategicProjects",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "DeleteStrategicProjects",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ExcelSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Project_ID",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Project_ID",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Asset_ID",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Asset_ID",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Fund_ID",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Fund_ID",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Reporting_Period",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Reporting_Period",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Validation Flag",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Validation_Flag",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Primary Management Activity",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Primary_Management_Activity",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Project Objectives",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Project_Objectives",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Expected Value Impact",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Expected_Value_Impact",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Deliverable",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Deliverable",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Deliverable Project Weighting",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Deliverable_Project_Weighting",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Deliverable Expected Completion Date",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Deliverable_Expected_Completion_Date",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Deliverable Planned Completion Date",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Deliverable_Planned_Completion_Date",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Current Progress % Complete",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Current_Progress_Percent_Complete",
									"physicalType": "UTF8"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ExcelWorkbook_AllTabs_ds",
						"type": "DatasetReference",
						"parameters": {
							"WorkbookName": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							},
							"TabName": {
								"value": "@pipeline().parameters.StrategicProjects",
								"type": "Expression"
							},
							"Range": {
								"value": "@pipeline().parameters.StrategicProjectsRange",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ParquetPersistentOpsWithTabParam_ds",
						"type": "DatasetReference",
						"parameters": {
							"ParquetFile": {
								"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.StrategicProjects,'_',pipeline().parameters.CurrentQuarterDate,'_Extract')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "ProcessWorkbookStrategicProjects",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ExtractStrategicProjects",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ProcessOpsWorkbookTabStrategicProjects_pl",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"WorkbookName": {
							"value": "@pipeline().parameters.WorkbookName",
							"type": "Expression"
						},
						"CurrentQuarterDate": {
							"value": "@pipeline().parameters.CurrentQuarterDate",
							"type": "Expression"
						},
						"StrategicProjects": {
							"value": "@pipeline().parameters.StrategicProjects",
							"type": "Expression"
						},
						"CurrentRunDateTime": {
							"value": "@pipeline().parameters.CurrentRunDateTime",
							"type": "Expression"
						},
						"MasterUtcTag": {
							"value": "@pipeline().parameters.MasterUtcTag",
							"type": "Expression"
						},
						"MasterPipeline": {
							"value": "@pipeline().parameters.MasterPipeline",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "LoadAndUpdateStrategicProjects",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ProcessWorkbookStrategicProjects",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ProcessOpsWorkbookTabStrategicProjects_spl",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"WorkbookName": {
							"value": "@pipeline().parameters.WorkbookName",
							"type": "Expression"
						},
						"CurrentQuarterDate": {
							"value": "@pipeline().parameters.CurrentQuarterDate",
							"type": "Expression"
						},
						"StrategicProjects": {
							"value": "@pipeline().parameters.StrategicProjects",
							"type": "Expression"
						},
						"CurrentRunDateTime": {
							"value": "@pipeline().parameters.CurrentRunDateTime",
							"type": "Expression"
						},
						"MasterUtcTag": {
							"value": "@pipeline().parameters.MasterUtcTag",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "ExtractAnswers",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "DeleteAnswers",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ExcelSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Asset_ID",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Asset_ID",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Fund_ID",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Fund_ID",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Reporting_Period",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Reporting_Period",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "UID",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "UID",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Attribute",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Attribute",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Answer_Number",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Answer_Number",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Text_Response",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Text_Response",
									"type": "String",
									"physicalType": "UTF8"
								}
							},
							{
								"source": {
									"name": "Numeric_Response",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Numeric_Response",
									"type": "String",
									"physicalType": "UTF8"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ExcelWorkbook_AllTabs_ds",
						"type": "DatasetReference",
						"parameters": {
							"WorkbookName": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							},
							"TabName": {
								"value": "@pipeline().parameters.Answers",
								"type": "Expression"
							},
							"Range": {
								"value": "@pipeline().parameters.AnswersRange",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ParquetPersistentOpsWithTabParam_ds",
						"type": "DatasetReference",
						"parameters": {
							"ParquetFile": {
								"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.Answers,'_',pipeline().parameters.CurrentQuarterDate,'_Extract')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "ProcessOpsWorkbookAnswers",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ExtractAnswers",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ProcessOpsWorkbookTabAnswers_pl",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"WorkbookName": {
							"value": "@pipeline().parameters.WorkbookName",
							"type": "Expression"
						},
						"CurrentQuarterDate": {
							"value": "@pipeline().parameters.CurrentQuarterDate",
							"type": "Expression"
						},
						"Answers": {
							"value": "@pipeline().parameters.Answers",
							"type": "Expression"
						},
						"CurrentRunDateTime": {
							"value": "@pipeline().parameters.CurrentRunDateTime",
							"type": "Expression"
						},
						"MasterUtcTag": {
							"value": "@pipeline().parameters.MasterUtcTag",
							"type": "Expression"
						},
						"MasterPipeline": {
							"value": "@pipeline().parameters.MasterPipeline",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "DeleteAnswers",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": {
						"value": "[audit].[DeleteAuditTable]",
						"type": "Expression"
					},
					"storedProcedureParameters": {
						"TableName": {
							"value": {
								"value": "OPS_Answers_Error",
								"type": "Expression"
							},
							"type": "String"
						},
						"WorkBookName": {
							"value": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SQLdbConnection",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LoadAnswers",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ProcessOpsWorkbookAnswers",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ProcessOpsWorkbookTabAnswers_spl",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"WorkbookName": {
							"value": "@pipeline().parameters.WorkbookName",
							"type": "Expression"
						},
						"CurrentQuarterDate": {
							"value": "@pipeline().parameters.CurrentQuarterDate",
							"type": "Expression"
						},
						"Answers": {
							"value": "@pipeline().parameters.Answers",
							"type": "Expression"
						},
						"CurrentRunDateTime": {
							"value": "@pipeline().parameters.CurrentRunDateTime",
							"type": "Expression"
						},
						"MasterUtcTag": {
							"value": "@pipeline().parameters.MasterUtcTag",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "InsertWorkbookWorksheetAnswers",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LoadAnswers",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[audit].[InsertAuditWorkbookWorksheetListTable]",
					"storedProcedureParameters": {
						"AssetID": {
							"value": {
								"value": "@pipeline().parameters.Asset_ID",
								"type": "Expression"
							},
							"type": "String"
						},
						"CurrentQuarterDate": {
							"value": {
								"value": "@pipeline().parameters.CurrentQuarterDate",
								"type": "Expression"
							},
							"type": "String"
						},
						"FundID": {
							"value": {
								"value": "@pipeline().parameters.Fund_ID",
								"type": "Expression"
							},
							"type": "String"
						},
						"Workbook": {
							"value": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							},
							"type": "String"
						},
						"Worksheet": {
							"value": {
								"value": "@pipeline().parameters.Answers",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SQLdbConnection",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "InsertWorkbookWorksheetStrategicProjects",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LoadAndUpdateStrategicProjects",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[audit].[InsertAuditWorkbookWorksheetListTable]",
					"storedProcedureParameters": {
						"AssetID": {
							"value": {
								"value": "@pipeline().parameters.Asset_ID",
								"type": "Expression"
							},
							"type": "String"
						},
						"CurrentQuarterDate": {
							"value": {
								"value": "@pipeline().parameters.CurrentQuarterDate",
								"type": "Expression"
							},
							"type": "String"
						},
						"FundID": {
							"value": {
								"value": "@pipeline().parameters.Fund_ID",
								"type": "Expression"
							},
							"type": "String"
						},
						"Workbook": {
							"value": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							},
							"type": "String"
						},
						"Worksheet": {
							"value": {
								"value": "@pipeline().parameters.StrategicProjects",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SQLdbConnection",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "InsertWorkbookWorksheetCertifications",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LoadAndUpdateCertificates",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[audit].[InsertAuditWorkbookWorksheetListTable]",
					"storedProcedureParameters": {
						"AssetID": {
							"value": {
								"value": "@pipeline().parameters.Asset_ID",
								"type": "Expression"
							},
							"type": "String"
						},
						"CurrentQuarterDate": {
							"value": {
								"value": "@pipeline().parameters.CurrentQuarterDate",
								"type": "Expression"
							},
							"type": "String"
						},
						"FundID": {
							"value": {
								"value": "@pipeline().parameters.Fund_ID",
								"type": "Expression"
							},
							"type": "String"
						},
						"Workbook": {
							"value": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							},
							"type": "String"
						},
						"Worksheet": {
							"value": {
								"value": "@pipeline().parameters.Certifications",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SQLdbConnection",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "InsertWorkbookWorksheetContracts",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LoadAndUpdateContract",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[audit].[InsertAuditWorkbookWorksheetListTable]",
					"storedProcedureParameters": {
						"AssetID": {
							"value": {
								"value": "@pipeline().parameters.Asset_ID",
								"type": "Expression"
							},
							"type": "String"
						},
						"CurrentQuarterDate": {
							"value": {
								"value": "@pipeline().parameters.CurrentQuarterDate",
								"type": "Expression"
							},
							"type": "String"
						},
						"FundID": {
							"value": {
								"value": "@pipeline().parameters.Fund_ID",
								"type": "Expression"
							},
							"type": "String"
						},
						"Workbook": {
							"value": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							},
							"type": "String"
						},
						"Worksheet": {
							"value": {
								"value": "@pipeline().parameters.Contracts",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SQLdbConnection",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "InsertWorkbookWorksheetOperations",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LoadOperation",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[audit].[InsertAuditWorkbookWorksheetListTable]",
					"storedProcedureParameters": {
						"AssetID": {
							"value": {
								"value": "@pipeline().parameters.Asset_ID",
								"type": "Expression"
							},
							"type": "String"
						},
						"CurrentQuarterDate": {
							"value": {
								"value": "@pipeline().parameters.CurrentQuarterDate",
								"type": "Expression"
							},
							"type": "String"
						},
						"FundID": {
							"value": {
								"value": "@pipeline().parameters.Fund_ID",
								"type": "Expression"
							},
							"type": "String"
						},
						"Workbook": {
							"value": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							},
							"type": "String"
						},
						"Worksheet": {
							"value": {
								"value": "@pipeline().parameters.Operations",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SQLdbConnection",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "InsertWorkbookWorksheetHarvestRecon",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LoadHarvestReconciliation",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[audit].[InsertAuditWorkbookWorksheetListTable]",
					"storedProcedureParameters": {
						"AssetID": {
							"value": {
								"value": "@pipeline().parameters.Asset_ID",
								"type": "Expression"
							},
							"type": "String"
						},
						"CurrentQuarterDate": {
							"value": {
								"value": "@pipeline().parameters.CurrentQuarterDate",
								"type": "Expression"
							},
							"type": "String"
						},
						"FundID": {
							"value": {
								"value": "@pipeline().parameters.Fund_ID",
								"type": "Expression"
							},
							"type": "String"
						},
						"Workbook": {
							"value": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							},
							"type": "String"
						},
						"Worksheet": {
							"value": {
								"value": "@pipeline().parameters.HarvestReconcilliation",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SQLdbConnection",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "InsertWorkbookWorksheetTimberSales",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LoadTimberSales",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[audit].[InsertAuditWorkbookWorksheetListTable]",
					"storedProcedureParameters": {
						"AssetID": {
							"value": {
								"value": "@pipeline().parameters.Asset_ID",
								"type": "Expression"
							},
							"type": "String"
						},
						"CurrentQuarterDate": {
							"value": {
								"value": "@pipeline().parameters.CurrentQuarterDate",
								"type": "Expression"
							},
							"type": "String"
						},
						"FundID": {
							"value": {
								"value": "@pipeline().parameters.Fund_ID",
								"type": "Expression"
							},
							"type": "String"
						},
						"Workbook": {
							"value": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							},
							"type": "String"
						},
						"Worksheet": {
							"value": {
								"value": "@pipeline().parameters.TimberSales",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SQLdbConnection",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"WorkbookName": {
				"type": "string",
				"defaultValue": "Blenheim Estate Limited Q4 FY20.xlsx"
			},
			"CurrentQuarterDate": {
				"type": "string",
				"defaultValue": "2020-06-30"
			},
			"OtherSales": {
				"type": "string",
				"defaultValue": "Other Sales"
			},
			"MajorSevereIncidents": {
				"type": "string",
				"defaultValue": "Major Severe Incidents"
			},
			"RiskOpportunityRegister": {
				"type": "string",
				"defaultValue": "Risk Opportunity Register"
			},
			"Certifications": {
				"type": "string",
				"defaultValue": "Certifications"
			},
			"RelatedPartyTransactions": {
				"type": "string",
				"defaultValue": "Related Party Transactions"
			},
			"TimberSales": {
				"type": "string",
				"defaultValue": "Timber Sales"
			},
			"HarvestReconcilliation": {
				"type": "string",
				"defaultValue": "Harvest Reconcilliation"
			},
			"Operations": {
				"type": "string",
				"defaultValue": "Operations"
			},
			"Contracts": {
				"type": "string",
				"defaultValue": "Contracts"
			},
			"StrategicProjects": {
				"type": "string",
				"defaultValue": "Strategic Projects"
			},
			"CurrentRunDateTime": {
				"type": "string",
				"defaultValue": "2020-08-01"
			},
			"MasterUtcTag": {
				"type": "string",
				"defaultValue": "2020-08-28T06:05:53.4181322Z"
			},
			"MasterPipeline": {
				"type": "string",
				"defaultValue": "ProcessOpsWorkbookMaster_pl"
			},
			"OtherSalesRange": {
				"type": "string"
			},
			"MajorSevereIncidentsRange": {
				"type": "string"
			},
			"RiskOpportunityRegisterRange": {
				"type": "string"
			},
			"CertificationsRange": {
				"type": "string",
				"defaultValue": "A8:N99999"
			},
			"RelatedPartyTransactionsRange": {
				"type": "string"
			},
			"TimberSalesRange": {
				"type": "string",
				"defaultValue": "A8:W99999"
			},
			"HarvestReconcilliationRange": {
				"type": "string",
				"defaultValue": "A8:AA9999"
			},
			"OperationsRange": {
				"type": "string",
				"defaultValue": "A8:Q9999"
			},
			"ContractsRange": {
				"type": "string",
				"defaultValue": "A8:N9999"
			},
			"StrategicProjectsRange": {
				"type": "string",
				"defaultValue": "A8:M9999"
			},
			"Answers": {
				"type": "string",
				"defaultValue": "Answers_DWH_Export"
			},
			"AnswersRange": {
				"type": "string",
				"defaultValue": "A1:H99999"
			},
			"Asset_ID": {
				"type": "string",
				"defaultValue": "MAN"
			},
			"Fund_ID": {
				"type": "string",
				"defaultValue": "BEL"
			}
		},
		"annotations": [],
		"lastPublishTime": "2020-10-08T00:17:50Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}