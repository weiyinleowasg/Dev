{
	"name": "ProcessOpsWorkbookMaster_pl",
	"properties": {
		"description": "Master job to orchestrate multiple pipelines run. Each pipeline correspond to one tab in the Excel workbook.",
		"activities": [
			{
				"name": "ProcessOpsWorkbookSubMaster_pl",
				"description": "Sub Master to run children pipelines in parallel",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "DeleteWorkbookWorksheetAssetList",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ProcessOpsWorkbookSubMaster_pl",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"WorkbookName": {
							"value": "@pipeline().parameters.WorkbookName",
							"type": "Expression"
						},
						"CurrentQuarterDate": {
							"value": "@pipeline().parameters.CurrentQuarterDate",
							"type": "Expression"
						},
						"OtherSales": {
							"value": "@variables('OtherSales')",
							"type": "Expression"
						},
						"MajorSevereIncidents": {
							"value": "@variables('MajorSevereIncidents')",
							"type": "Expression"
						},
						"RiskOpportunityRegister": {
							"value": "@variables('RiskOpportunityRegister')",
							"type": "Expression"
						},
						"Certifications": {
							"value": "@variables('Certifications')",
							"type": "Expression"
						},
						"RelatedPartyTransactions": {
							"value": "@variables('RelatedPartyTransactions')",
							"type": "Expression"
						},
						"TimberSales": {
							"value": "@variables('TimberSales')",
							"type": "Expression"
						},
						"HarvestReconcilliation": {
							"value": "@variables('HarvestReconcilliation')",
							"type": "Expression"
						},
						"Operations": {
							"value": "@variables('Operations')",
							"type": "Expression"
						},
						"Contracts": {
							"value": "@variables('Contracts')",
							"type": "Expression"
						},
						"StrategicProjects": {
							"value": "@variables('StrategicProjects')",
							"type": "Expression"
						},
						"CurrentRunDateTime": {
							"value": "@variables('CurrentRunDateTime')",
							"type": "Expression"
						},
						"MasterUtcTag": {
							"value": "@variables('MasterUtcTag')",
							"type": "Expression"
						},
						"MasterPipeline": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"OtherSalesRange": {
							"value": "@variables('OtherSalesRange')",
							"type": "Expression"
						},
						"MajorSevereIncidentsRange": {
							"value": "@variables('MajorSevereIncidentsRange')",
							"type": "Expression"
						},
						"RiskOpportunityRegisterRange": {
							"value": "@variables('RiskOpportunityRegisterRange')",
							"type": "Expression"
						},
						"CertificationsRange": {
							"value": "@variables('CertificationsRange')",
							"type": "Expression"
						},
						"RelatedPartyTransactionsRange": {
							"value": "@variables('RelatedPartyTransactionsRange')",
							"type": "Expression"
						},
						"TimberSalesRange": {
							"value": "@variables('TimberSalesRange')",
							"type": "Expression"
						},
						"HarvestReconcilliationRange": {
							"value": "@variables('HarvestReconcilliationRange')",
							"type": "Expression"
						},
						"OperationsRange": {
							"value": "@variables('OperationsRange')",
							"type": "Expression"
						},
						"ContractsRange": {
							"value": "@variables('ContractsRange')",
							"type": "Expression"
						},
						"StrategicProjectsRange": {
							"value": "@variables('StrategicProjectsRange')",
							"type": "Expression"
						},
						"Answers": {
							"value": "@variables('Answers')",
							"type": "Expression"
						},
						"AnswersRange": {
							"value": "@variables('AnswersRange')",
							"type": "Expression"
						},
						"Asset_ID": {
							"value": "@pipeline().parameters.Asset_ID",
							"type": "Expression"
						},
						"Fund_ID": {
							"value": "@pipeline().parameters.Fund_ID",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "GetCurrentDate",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "MaterUtcTag",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "CurrentRunDateTime",
					"value": {
						"value": "@formatDateTime(convertFromUtc(utcnow(),'AUS Eastern Standard Time'),'yyyy-MM-dd HH:mm:ss')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "MaterUtcTag",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "MasterUtcTag",
					"value": {
						"value": "@utcnow()",
						"type": "Expression"
					}
				}
			},
			{
				"name": "CopyToSourceArchive",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ProcessOpsWorkbookSubMaster_pl",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": false,
							"deleteFilesAfterCompletion": false
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "BinaryFromSourceLandingRawOps_ds",
						"type": "DatasetReference",
						"parameters": {
							"file": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "BinaryToSourceArchive_ds",
						"type": "DatasetReference",
						"parameters": {
							"path": {
								"value": "@concat(substring(pipeline().parameters.CurrentQuarterDate,0,4), '/', concat(if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'01'),'JAN',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'02'),'FEB',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'03'),'MAR',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'04'),'APR',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'05'),'MAY',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'06'),'JUN',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'07'),'JUL',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'08'),'AUG',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'09'),'SEP',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'10'),'OCT',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'11'),'NOV',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'12'),'DEC','')), '/', substring(pipeline().parameters.CurrentQuarterDate,8,2))",
								"type": "Expression"
							},
							"file": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "CopyToDataLake",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyToSourceArchive",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": false,
							"deleteFilesAfterCompletion": false
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "BinaryFromSourceLandingRawOps_ds",
						"type": "DatasetReference",
						"parameters": {
							"file": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "BinaryToDatalake_ds",
						"type": "DatasetReference",
						"parameters": {
							"path": {
								"value": "@concat('manual/',substring(pipeline().parameters.CurrentQuarterDate,0,4), '/', concat(if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'01'),'JAN',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'02'),'FEB',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'03'),'MAR',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'04'),'APR',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'05'),'MAY',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'06'),'JUN',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'07'),'JUL',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'08'),'AUG',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'09'),'SEP',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'10'),'OCT',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'11'),'NOV',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'12'),'DEC','')), '/', substring(pipeline().parameters.CurrentQuarterDate,8,2))",
								"type": "Expression"
							},
							"file": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "DeleteFileFromSourceLandingRaw",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "CopyToDataLake",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "BinaryFromSourceLandingRawOps_ds",
						"type": "DatasetReference",
						"parameters": {
							"file": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							}
						}
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": false
					}
				}
			},
			{
				"name": "DeleteAllRelatedAdf2PersistentArea",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "DeleteFileFromSourceLandingRaw",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "BinaryFromAdf2PersistentArea_ds",
						"type": "DatasetReference"
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"prefix": {
							"value": "@{pipeline().parameters.WorkbookName}",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "RegisterStatusInMasterRunLog",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "UpdateSourceRegisterTable",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[log].[UpdateMasterRunLog]",
					"storedProcedureParameters": {
						"MasterUtcTag": {
							"value": {
								"value": "@variables('MasterUtcTag')",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunMessage": {
							"value": {
								"value": "@concat(pipeline().Pipeline,'-',pipeline().parameters.WorkbookName)",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunStatus": {
							"value": {
								"value": "SUCCESS",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SQLdbConnection",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "CopyToSourceArchive_Failed",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ProcessOpsWorkbookSubMaster_pl",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": false,
							"deleteFilesAfterCompletion": false
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "BinaryFromSourceLandingRawOps_ds",
						"type": "DatasetReference",
						"parameters": {
							"file": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "BinaryToSourceArchive_ds",
						"type": "DatasetReference",
						"parameters": {
							"path": {
								"value": "@concat(substring(pipeline().parameters.CurrentQuarterDate,0,4), '/', concat(if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'01'),'JAN',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'02'),'FEB',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'03'),'MAR',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'04'),'APR',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'05'),'MAY',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'06'),'JUN',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'07'),'JUL',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'08'),'AUG',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'09'),'SEP',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'10'),'OCT',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'11'),'NOV',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'12'),'DEC','')), '/', substring(pipeline().parameters.CurrentQuarterDate,8,2))",
								"type": "Expression"
							},
							"file": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "DeleteFileFromSourceLandingRaw_Failed",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "CopyToSourceArchive_Failed",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "BinaryFromSourceLandingRawOps_ds",
						"type": "DatasetReference",
						"parameters": {
							"file": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							}
						}
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": false
					}
				}
			},
			{
				"name": "DeleteAllRelatedAdf2PersistentArea_Failed",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "DeleteFileFromSourceLandingRaw_Failed",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "BinaryFromAdf2PersistentArea_ds",
						"type": "DatasetReference"
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"prefix": {
							"value": "@{pipeline().parameters.WorkbookName}",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "RegisterStatusInMasterRunLog_Failed",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "UpdateSourceRegisterTableFailed",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[log].[UpdateMasterRunLog]",
					"storedProcedureParameters": {
						"MasterUtcTag": {
							"value": {
								"value": "@variables('MasterUtcTag')",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunMessage": {
							"value": {
								"value": "@concat(pipeline().Pipeline,'-',pipeline().parameters.WorkbookName)",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunStatus": {
							"value": {
								"value": "FAILED",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SQLdbConnection",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "DeleteWorkbookWorksheetAssetList",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ProcessOpsWorkbookSendMailRunStart_pl",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[audit].[DeleteAuditWorkBookWorksheetListTable]",
					"storedProcedureParameters": {
						"WorkBookName": {
							"value": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SQLdbConnection",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SendEmailsRunCompleteNotOK",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "RegisterStatusInMasterRunLog_Failed",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ProcessOpsWorkbookSendMailRunComplete_pl",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"DataFactoryName": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						},
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"WorkbookName": {
							"value": "@pipeline().parameters.WorkbookName",
							"type": "Expression"
						},
						"Asset_ID": {
							"value": "@pipeline().parameters.Asset_ID",
							"type": "Expression"
						},
						"Fund_ID": {
							"value": "@pipeline().parameters.Fund_ID",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "UpdateSourceRegisterTable",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "DeleteAllRelatedAdf2PersistentArea",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ProcessOpsWorkbookUpdateSourceRegister_pl",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"WorkbookName": {
							"value": "@pipeline().parameters.WorkbookName",
							"type": "Expression"
						},
						"MasterPipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"CurrentQuarterDate": {
							"value": "@pipeline().parameters.CurrentQuarterDate",
							"type": "Expression"
						},
						"MasterUtcTag": {
							"value": "@variables('MasterUtcTag')",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "UpdateSourceRegisterTableFailed",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "DeleteAllRelatedAdf2PersistentArea_Failed",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[log].[SourceRegisterTableInsert]",
					"storedProcedureParameters": {
						"ArchiveContainer": {
							"value": {
								"value": "sourcearchive",
								"type": "Expression"
							},
							"type": "String"
						},
						"Comment": {
							"value": {
								"value": "Pipeline failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"DatalakeContainer": {
							"value": {
								"value": "nonfinancial",
								"type": "Expression"
							},
							"type": "String"
						},
						"EtlUtcTag": {
							"value": {
								"value": "@variables('MasterUtcTag')",
								"type": "Expression"
							},
							"type": "String"
						},
						"FileName": {
							"value": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							},
							"type": "String"
						},
						"InputDate": {
							"value": {
								"value": "@pipeline().parameters.CurrentQuarterDate",
								"type": "Expression"
							},
							"type": "String"
						},
						"InputMethod": {
							"value": {
								"value": "manual",
								"type": "Expression"
							},
							"type": "String"
						},
						"ProcessName": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunStatus": {
							"value": {
								"value": "ABORT",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceContainer": {
							"value": {
								"value": "sourcelandingraw-ops",
								"type": "Expression"
							},
							"type": "String"
						},
						"TargetContainer": {
							"value": {
								"value": "adf2persistentarea",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SQLdbConnection",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SendEmailsRunCompleteOK",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "RegisterStatusInMasterRunLog",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ProcessOpsWorkbookSendMailRunComplete_pl",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"DataFactoryName": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						},
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"WorkbookName": {
							"value": "@pipeline().parameters.WorkbookName",
							"type": "Expression"
						},
						"Asset_ID": {
							"value": "@pipeline().parameters.Asset_ID",
							"type": "Expression"
						},
						"Fund_ID": {
							"value": "@pipeline().parameters.Fund_ID",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "ProcessOpsWorkbookSendMailRunStart_pl",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "GetCurrentDate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "ProcessOpsWorkbookSendMailRunStart_pl",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"DataFactoryName": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						},
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"WorkbookName": {
							"value": "@pipeline().parameters.WorkbookName",
							"type": "Expression"
						},
						"Asset_ID": {
							"value": "@pipeline().parameters.Asset_ID",
							"type": "Expression"
						},
						"Fund_ID": {
							"value": "@pipeline().parameters.Fund_ID",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"WorkbookName": {
				"type": "string",
				"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx"
			},
			"CurrentQuarterDate": {
				"type": "string",
				"defaultValue": "2020-06-30"
			},
			"Asset_ID": {
				"type": "string",
				"defaultValue": "WFP"
			},
			"Fund_ID": {
				"type": "string",
				"defaultValue": "ANZFOF2"
			}
		},
		"variables": {
			"OtherSales": {
				"type": "String",
				"defaultValue": "Other Sales"
			},
			"MajorSevereIncidents": {
				"type": "String",
				"defaultValue": "Major Severe Incidents"
			},
			"RiskOpportunityRegister": {
				"type": "String",
				"defaultValue": "Risk Opportunity Register"
			},
			"Certifications": {
				"type": "String",
				"defaultValue": "Certifications"
			},
			"RelatedPartyTransactions": {
				"type": "String",
				"defaultValue": "Related Party Transactions"
			},
			"TimberSales": {
				"type": "String",
				"defaultValue": "Timber Sales"
			},
			"HarvestReconcilliation": {
				"type": "String",
				"defaultValue": "Harvest Reconcilliation"
			},
			"Operations": {
				"type": "String",
				"defaultValue": "Operations"
			},
			"Contracts": {
				"type": "String",
				"defaultValue": "Contracts"
			},
			"StrategicProjects": {
				"type": "String",
				"defaultValue": "Strategic Projects"
			},
			"CurrentRunDateTime": {
				"type": "String",
				"defaultValue": "2020-08-01"
			},
			"MasterUtcTag": {
				"type": "String",
				"defaultValue": "2020-08-28T06:05:53.4181322Z"
			},
			"OtherSalesRange": {
				"type": "String",
				"defaultValue": "A8:P999"
			},
			"MajorSevereIncidentsRange": {
				"type": "String",
				"defaultValue": "A8:L99999"
			},
			"RiskOpportunityRegisterRange": {
				"type": "String",
				"defaultValue": "A8:T9999"
			},
			"CertificationsRange": {
				"type": "String",
				"defaultValue": "A8:N99999"
			},
			"RelatedPartyTransactionsRange": {
				"type": "String",
				"defaultValue": "A8:K99999"
			},
			"TimberSalesRange": {
				"type": "String",
				"defaultValue": "A8:W9999"
			},
			"HarvestReconcilliationRange": {
				"type": "String",
				"defaultValue": "A8:AA9999"
			},
			"OperationsRange": {
				"type": "String",
				"defaultValue": "A8:Q9999"
			},
			"ContractsRange": {
				"type": "String",
				"defaultValue": "A8:N9999"
			},
			"StrategicProjectsRange": {
				"type": "String",
				"defaultValue": "A8:M9999"
			},
			"Answers": {
				"type": "String",
				"defaultValue": "Answers_DWH_Export"
			},
			"AnswersRange": {
				"type": "String",
				"defaultValue": "A1:H99999"
			}
		},
		"annotations": [],
		"lastPublishTime": "2020-10-15T03:05:06Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}