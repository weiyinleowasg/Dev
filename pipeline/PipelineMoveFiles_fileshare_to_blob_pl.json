{
	"name": "PipelineMoveFiles_fileshare_to_blob_pl",
	"properties": {
		"description": "Move files from one folder to another folder",
		"activities": [
			{
				"name": "GetFileList",
				"description": "Get the list of file",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "BinaryDataSourceFileshareDirectory_MoveFile_ds",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "FileServerReadSettings",
						"recursive": true
					}
				}
			},
			{
				"name": "ForEachFile",
				"description": "Iterate each file, and move them one by one.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "FilterFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('FilterFiles').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "CSVorGEOJSONfilesOnly",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@or(endswith(item().name,'.csv'), endswith(item().name,'.geojson') ) ",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "CopyFiromFilestoreToBlobstore",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "BinarySource",
												"storeSettings": {
													"type": "FileServerReadSettings",
													"recursive": false,
													"wildcardFileName": {
														"value": "@{item().name}",
														"type": "Expression"
													}
												}
											},
											"sink": {
												"type": "BinarySink",
												"storeSettings": {
													"type": "AzureBlobStorageWriteSettings"
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "BinaryDataSourceFileshareDirectory_MoveFile_ds",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "BinaryDataDestinationBlob_MoveFile_ds",
												"type": "DatasetReference",
												"parameters": {
													"filename": {
														"value": "@{item().name}",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "DeleteFromFilestore",
										"type": "Delete",
										"dependsOn": [
											{
												"activity": "CopyFiromFilestoreToBlobstore",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataset": {
												"referenceName": "BinaryDataSourceFileshareDirectory_MoveFile_ds",
												"type": "DatasetReference"
											},
											"enableLogging": false,
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": false,
												"wildcardFileName": {
													"value": "@{item().name}",
													"type": "Expression"
												}
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "FilterFiles",
				"description": "Only files will be selected, the source-folders will not be selected.",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "GetFileList",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetFileList').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item().type, 'File')",
						"type": "Expression"
					}
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2020-08-28T02:28:09Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}