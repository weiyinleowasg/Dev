{
	"name": "ProcessOpsWorkbookUpdateSourceRegister_pl",
	"properties": {
		"activities": [
			{
				"name": "CollateOpsError",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT ERROR_COUNT,\n  CASE WHEN ERROR_COUNT = 0 THEN 'SUCCESS'\n  ELSE 'FAIL'\n  END RUN_STATUS,\n  CASE WHEN ERROR_COUNT = 0 THEN NULL\n  ELSE 'Not all Excel sheets have been loaded with no error'\n  END COMMENT_MSG\n  FROM (\n       SELECT SUM(ERROR_COUNT) ERROR_COUNT FROM (\n\t\t\t SELECT CASE WHEN ef.ERROR_COUNT > 0 AND wb.Work_Sheet IS NOT NULL THEN 1 WHEN ef.ERROR_COUNT = 0 AND wb.Work_Sheet IS NOT NULL THEN 0 ELSE 1 END AS ERROR_COUNT\n\t\t\t FROM audit.OPS_Workbook_Worksheet_Asset_List wb\n\t\t\t RIGHT JOIN \n             (SELECT 'Certifications' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_Book, COUNT(*) AS ERROR_COUNT \n\t\t\t  FROM audit.OPS_Certification_Error\n\t\t\t  WHERE SOURCE_SUB_FILE = 'Certifications' AND SOURCE_FILE = '@{pipeline().parameters.WorkbookName}') ef\n\t\t\t ON wb.Work_Sheet = ef.Work_Sheet AND wb.Work_Sheet = ef.Work_Sheet\n             UNION ALL\n\t\t\t SELECT CASE WHEN ef.ERROR_COUNT > 0 AND wb.Work_Sheet IS NOT NULL THEN 1 WHEN ef.ERROR_COUNT = 0 AND wb.Work_Sheet IS NOT NULL THEN 0 ELSE 1 END AS ERROR_COUNT\n\t\t\t FROM audit.OPS_Workbook_Worksheet_Asset_List wb\n\t\t\t RIGHT JOIN \n             (SELECT 'Timber Sales' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_Book, COUNT(*) AS ERROR_COUNT \n\t\t\t  FROM audit.OPS_Timber_Sales_Error\n\t\t\t  WHERE SOURCE_SUB_FILE = 'Timber Sales' AND SOURCE_FILE = '@{pipeline().parameters.WorkbookName}') ef\n\t\t\t ON wb.Work_Sheet = ef.Work_Sheet AND wb.Work_Sheet = ef.Work_Sheet\n\t\t\t UNION ALL\n\t\t\t SELECT CASE WHEN ef.ERROR_COUNT > 0 AND wb.Work_Sheet IS NOT NULL THEN 1 WHEN ef.ERROR_COUNT = 0 AND wb.Work_Sheet IS NOT NULL THEN 0 ELSE 1 END AS ERROR_COUNT\n\t\t\t FROM audit.OPS_Workbook_Worksheet_Asset_List wb\n\t\t\t RIGHT JOIN \n             (SELECT 'Contracts' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_Book, COUNT(*) AS ERROR_COUNT \n\t\t\t  FROM audit.OPS_Contract_Error\n\t\t\t  WHERE SOURCE_SUB_FILE = 'Contracts' AND SOURCE_FILE = '@{pipeline().parameters.WorkbookName}') ef\n\t\t\t ON wb.Work_Sheet = ef.Work_Sheet AND wb.Work_Sheet = ef.Work_Sheet\n             UNION ALL\n\t\t\t SELECT CASE WHEN ef.ERROR_COUNT > 0 AND wb.Work_Sheet IS NOT NULL THEN 1 WHEN ef.ERROR_COUNT = 0 AND wb.Work_Sheet IS NOT NULL THEN 0 ELSE 1 END AS ERROR_COUNT\n\t\t\t FROM audit.OPS_Workbook_Worksheet_Asset_List wb\n\t\t\t RIGHT JOIN \n             (SELECT 'Harvest Reconcilliation' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_Book, COUNT(*) AS ERROR_COUNT \n\t\t\t  FROM audit.OPS_Harvest_Reconciliation_Error\n\t\t\t  WHERE SOURCE_SUB_FILE = 'Harvest Reconcilliation' AND SOURCE_FILE = '@{pipeline().parameters.WorkbookName}') ef\n\t\t\t ON wb.Work_Sheet = ef.Work_Sheet AND wb.Work_Sheet = ef.Work_Sheet\n\t\t\t UNION ALL\n\t\t\t SELECT CASE WHEN ef.ERROR_COUNT > 0 AND wb.Work_Sheet IS NOT NULL THEN 1 WHEN ef.ERROR_COUNT = 0 AND wb.Work_Sheet IS NOT NULL THEN 0 ELSE 1 END AS ERROR_COUNT\n\t\t\t FROM audit.OPS_Workbook_Worksheet_Asset_List wb\n\t\t\t RIGHT JOIN \n             (SELECT 'Major Severe Incidents' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_Book, COUNT(*) AS ERROR_COUNT \n\t\t\t  FROM audit.OPS_Incident_Error\n\t\t\t  WHERE SOURCE_SUB_FILE = 'Major Severe Incidents' AND SOURCE_FILE = '@{pipeline().parameters.WorkbookName}') ef\n\t\t\t ON wb.Work_Sheet = ef.Work_Sheet AND wb.Work_Sheet = ef.Work_Sheet\n             UNION ALL\n\t\t\t SELECT CASE WHEN ef.ERROR_COUNT > 0 AND wb.Work_Sheet IS NOT NULL THEN 1 WHEN ef.ERROR_COUNT = 0 AND wb.Work_Sheet IS NOT NULL THEN 0 ELSE 1 END AS ERROR_COUNT\n\t\t\t FROM audit.OPS_Workbook_Worksheet_Asset_List wb\n\t\t\t RIGHT JOIN \n             (SELECT 'Operations' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_Book, COUNT(*) AS ERROR_COUNT \n\t\t\t  FROM audit.OPS_Operation_Error\n\t\t\t  WHERE SOURCE_SUB_FILE = 'Operations' AND SOURCE_FILE = '@{pipeline().parameters.WorkbookName}') ef\n\t\t\t ON wb.Work_Sheet = ef.Work_Sheet AND wb.Work_Sheet = ef.Work_Sheet\n\t\t\t UNION ALL\n\t\t\t SELECT CASE WHEN ef.ERROR_COUNT > 0 AND wb.Work_Sheet IS NOT NULL THEN 1 WHEN ef.ERROR_COUNT = 0 AND wb.Work_Sheet IS NOT NULL THEN 0 ELSE 1 END AS ERROR_COUNT\n\t\t\t FROM audit.OPS_Workbook_Worksheet_Asset_List wb\n\t\t\t RIGHT JOIN \n             (SELECT 'Related Party Transactions' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_Book, COUNT(*) AS ERROR_COUNT \n\t\t\t  FROM audit.OPS_Related_Party_Transaction_Error\n\t\t\t  WHERE SOURCE_SUB_FILE = 'Related Party Transactions' AND SOURCE_FILE = '@{pipeline().parameters.WorkbookName}') ef\n\t\t\t ON wb.Work_Sheet = ef.Work_Sheet AND wb.Work_Sheet = ef.Work_Sheet\n             UNION ALL\n\t\t\t SELECT CASE WHEN ef.ERROR_COUNT > 0 AND wb.Work_Sheet IS NOT NULL THEN 1 WHEN ef.ERROR_COUNT = 0 AND wb.Work_Sheet IS NOT NULL THEN 0 ELSE 1 END AS ERROR_COUNT\n\t\t\t FROM audit.OPS_Workbook_Worksheet_Asset_List wb\n\t\t\t RIGHT JOIN \n             (SELECT 'Risk Opportunity Register' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_Book, COUNT(*) AS ERROR_COUNT \n\t\t\t  FROM audit.OPS_Risk_Opportunity_Register_Error\n\t\t\t  WHERE SOURCE_SUB_FILE = 'Risk Opportunity Register' AND SOURCE_FILE = '@{pipeline().parameters.WorkbookName}') ef\n\t\t\t ON wb.Work_Sheet = ef.Work_Sheet AND wb.Work_Sheet = ef.Work_Sheet\n\t\t\t UNION ALL\n\t\t\t SELECT CASE WHEN ef.ERROR_COUNT > 0 AND wb.Work_Sheet IS NOT NULL THEN 1 WHEN ef.ERROR_COUNT = 0 AND wb.Work_Sheet IS NOT NULL THEN 0 ELSE 1 END AS ERROR_COUNT\n\t\t\t FROM audit.OPS_Workbook_Worksheet_Asset_List wb\n\t\t\t RIGHT JOIN \n             (SELECT 'Other Sales' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_Book, COUNT(*) AS ERROR_COUNT \n\t\t\t  FROM audit.OPS_Sales_Other_Error\n\t\t\t  WHERE SOURCE_SUB_FILE = 'Other Sales' AND SOURCE_FILE = '@{pipeline().parameters.WorkbookName}') ef\n\t\t\t ON wb.Work_Sheet = ef.Work_Sheet AND wb.Work_Sheet = ef.Work_Sheet\n             UNION ALL\n\t\t\t SELECT CASE WHEN ef.ERROR_COUNT > 0 AND wb.Work_Sheet IS NOT NULL THEN 1 WHEN ef.ERROR_COUNT = 0 AND wb.Work_Sheet IS NOT NULL THEN 0 ELSE 1 END AS ERROR_COUNT\n\t\t\t FROM audit.OPS_Workbook_Worksheet_Asset_List wb\n\t\t\t RIGHT JOIN \n             (SELECT 'Strategic Projects' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_Book, COUNT(*) AS ERROR_COUNT \n\t\t\t  FROM audit.OPS_Strategic_Project_Error\n\t\t\t  WHERE SOURCE_SUB_FILE = 'Strategic Projects' AND SOURCE_FILE = '@{pipeline().parameters.WorkbookName}') ef\n\t\t\t ON wb.Work_Sheet = ef.Work_Sheet AND wb.Work_Sheet = ef.Work_Sheet\n             UNION ALL\n\t\t\t SELECT CASE WHEN ef.ERROR_COUNT > 0 AND wb.Work_Sheet IS NOT NULL THEN 1 WHEN ef.ERROR_COUNT = 0 AND wb.Work_Sheet IS NOT NULL THEN 0 ELSE 1 END AS ERROR_COUNT\n\t\t\t FROM audit.OPS_Workbook_Worksheet_Asset_List wb\n\t\t\t RIGHT JOIN \n             (SELECT 'Answers_DWH_Export' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_Book, COUNT(*) AS ERROR_COUNT \n\t\t\t  FROM audit.OPS_Answers_Error\n\t\t\t  WHERE SOURCE_SUB_FILE = 'Answers_DWH_Export' AND SOURCE_FILE = '@{pipeline().parameters.WorkbookName}') ef\n\t\t\t ON wb.Work_Sheet = ef.Work_Sheet AND wb.Work_Sheet = ef.Work_Sheet\n)x\n)z",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SQLtableGeneric_ds",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "InsertSourceRegisterTable",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "CollateOpsError",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[log].[SourceRegisterTableInsert]",
					"storedProcedureParameters": {
						"ArchiveContainer": {
							"value": {
								"value": "sourcearchive",
								"type": "Expression"
							},
							"type": "String"
						},
						"Comment": {
							"value": {
								"value": "@activity('CollateOpsError').output.firstRow.COMMENT_MSG",
								"type": "Expression"
							},
							"type": "String"
						},
						"DatalakeContainer": {
							"value": {
								"value": "nonfinancial",
								"type": "Expression"
							},
							"type": "String"
						},
						"EtlUtcTag": {
							"value": {
								"value": "@pipeline().parameters.MasterUtcTag",
								"type": "Expression"
							},
							"type": "String"
						},
						"FileName": {
							"value": {
								"value": "@pipeline().parameters.WorkbookName",
								"type": "Expression"
							},
							"type": "String"
						},
						"InputDate": {
							"value": {
								"value": "@pipeline().parameters.CurrentQuarterDate",
								"type": "Expression"
							},
							"type": "String"
						},
						"InputMethod": {
							"value": {
								"value": "manual",
								"type": "Expression"
							},
							"type": "String"
						},
						"ProcessName": {
							"value": {
								"value": "@pipeline().parameters.MasterPipelineName",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunStatus": {
							"value": {
								"value": "@activity('CollateOpsError').output.firstRow.RUN_STATUS",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceContainer": {
							"value": {
								"value": "sourcelandingraw-ops",
								"type": "Expression"
							},
							"type": "String"
						},
						"TargetContainer": {
							"value": {
								"value": "adf2persistentarea",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SQLdbConnection",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"WorkbookName": {
				"type": "string",
				"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx"
			},
			"MasterPipelineName": {
				"type": "string"
			},
			"CurrentQuarterDate": {
				"type": "string"
			},
			"MasterUtcTag": {
				"type": "string"
			}
		},
		"annotations": [],
		"lastPublishTime": "2020-10-08T13:28:49Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}